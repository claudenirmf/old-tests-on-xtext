/*
 * generated by Xtext 2.10.0
 */
package br.ufes.inf.nemo.ontol.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class OntoLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cIncludeKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cIncludesAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cIncludesModelCrossReference_3_0_1_0 = (CrossReference)cIncludesAssignment_3_0_1.eContents().get(0);
		private final RuleCall cIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1 = (RuleCall)cIncludesModelCrossReference_3_0_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cElementsModelElementParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Model:
		//	'module' name=QualifiedName '{' ('include' includes+=[Model|QualifiedName] ';'
		//	| elements+=ModelElement)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'module' name=QualifiedName '{' ('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)* '}'
		public Group getGroup() { return cGroup; }
		
		//'module'
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('include' includes+=[Model|QualifiedName] ';' | elements+=ModelElement)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'include' includes+=[Model|QualifiedName] ';'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'include'
		public Keyword getIncludeKeyword_3_0_0() { return cIncludeKeyword_3_0_0; }
		
		//includes+=[Model|QualifiedName]
		public Assignment getIncludesAssignment_3_0_1() { return cIncludesAssignment_3_0_1; }
		
		//[Model|QualifiedName]
		public CrossReference getIncludesModelCrossReference_3_0_1_0() { return cIncludesModelCrossReference_3_0_1_0; }
		
		//QualifiedName
		public RuleCall getIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1() { return cIncludesModelQualifiedNameParserRuleCall_3_0_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0_2() { return cSemicolonKeyword_3_0_2; }
		
		//elements+=ModelElement
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }
		
		//ModelElement
		public RuleCall getElementsModelElementParserRuleCall_3_1_0() { return cElementsModelElementParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ModelElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.ModelElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cImportParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cEntityDeclarationParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cGeneralizationSetParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ModelElement:
		//	(Import | EntityDeclaration | GeneralizationSet) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//(Import | EntityDeclaration | GeneralizationSet) ';'
		public Group getGroup() { return cGroup; }
		
		//(Import | EntityDeclaration | GeneralizationSet)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//Import
		public RuleCall getImportParserRuleCall_0_0() { return cImportParserRuleCall_0_0; }
		
		//EntityDeclaration
		public RuleCall getEntityDeclarationParserRuleCall_0_1() { return cEntityDeclarationParserRuleCall_0_1; }
		
		//GeneralizationSet
		public RuleCall getGeneralizationSetParserRuleCall_0_2() { return cGeneralizationSetParserRuleCall_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	'import' importedNamespace=QualifiedNameWithWildcard;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}
	public class EntityDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.EntityDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOntoLClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIndividualParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EntityDeclaration:
		//	OntoLClass | Individual;
		@Override public ParserRule getRule() { return rule; }
		
		//OntoLClass | Individual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OntoLClass
		public RuleCall getOntoLClassParserRuleCall_0() { return cOntoLClassParserRuleCall_0; }
		
		//Individual
		public RuleCall getIndividualParserRuleCall_1() { return cIndividualParserRuleCall_1; }
	}
	public class IndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.Individual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndividualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_2_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_2_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_2_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_2_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Assignment cAttAssignmentsAssignment_3_1_0 = (Assignment)cAlternatives_3_1.eContents().get(0);
		private final RuleCall cAttAssignmentsAttributeAssignmentParserRuleCall_3_1_0_0 = (RuleCall)cAttAssignmentsAssignment_3_1_0.eContents().get(0);
		private final Assignment cRefAssignmentsAssignment_3_1_1 = (Assignment)cAlternatives_3_1.eContents().get(1);
		private final RuleCall cRefAssignmentsReferenceAssignmentParserRuleCall_3_1_1_0 = (RuleCall)cRefAssignmentsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//Individual:
		//	'individual' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('{' (attAssignments+=AttributeAssignment
		//	| refAssignments+=ReferenceAssignment)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'individual' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('{' (attAssignments+=AttributeAssignment |
		//refAssignments+=ReferenceAssignment)* '}')?
		public Group getGroup() { return cGroup; }
		
		//'individual'
		public Keyword getIndividualKeyword_0() { return cIndividualKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(':' instantiatedClasses+=[OntoLClass|QualifiedName] (',' instantiatedClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//':'
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_2_1() { return cInstantiatedClassesAssignment_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_2_1_0() { return cInstantiatedClassesOntoLClassCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_1_0_1; }
		
		//(',' instantiatedClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//','
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_2_2_1() { return cInstantiatedClassesAssignment_2_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_2_2_1_0() { return cInstantiatedClassesOntoLClassCrossReference_2_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_2_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_2_2_1_0_1; }
		
		//('{' (attAssignments+=AttributeAssignment | refAssignments+=ReferenceAssignment)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//(attAssignments+=AttributeAssignment | refAssignments+=ReferenceAssignment)*
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }
		
		//attAssignments+=AttributeAssignment
		public Assignment getAttAssignmentsAssignment_3_1_0() { return cAttAssignmentsAssignment_3_1_0; }
		
		//AttributeAssignment
		public RuleCall getAttAssignmentsAttributeAssignmentParserRuleCall_3_1_0_0() { return cAttAssignmentsAttributeAssignmentParserRuleCall_3_1_0_0; }
		
		//refAssignments+=ReferenceAssignment
		public Assignment getRefAssignmentsAssignment_3_1_1() { return cRefAssignmentsAssignment_3_1_1; }
		
		//ReferenceAssignment
		public RuleCall getRefAssignmentsReferenceAssignmentParserRuleCall_3_1_1_0() { return cRefAssignmentsReferenceAssignmentParserRuleCall_3_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}
	public class OntoLClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.OntoLClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cOrderlessClassParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cHOClassParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cFOClassParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cAttributesAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_1_1_0_0 = (RuleCall)cAttributesAssignment_1_1_0.eContents().get(0);
		private final Assignment cAttAssignmentsAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cAttAssignmentsAttributeAssignmentParserRuleCall_1_1_1_0 = (RuleCall)cAttAssignmentsAssignment_1_1_1.eContents().get(0);
		private final Assignment cReferencesAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cReferencesReferenceParserRuleCall_1_1_2_0 = (RuleCall)cReferencesAssignment_1_1_2.eContents().get(0);
		private final Assignment cRefAssignmentsAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cRefAssignmentsReferenceAssignmentParserRuleCall_1_1_3_0 = (RuleCall)cRefAssignmentsAssignment_1_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//OntoLClass:
		//	(OrderlessClass | HOClass | FOClass) ('{' (attributes+=Attribute
		//	| attAssignments+=AttributeAssignment
		//	| references+=Reference
		//	| refAssignments+=ReferenceAssignment)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//(OrderlessClass | HOClass | FOClass) ('{' (attributes+=Attribute | attAssignments+=AttributeAssignment |
		//references+=Reference | refAssignments+=ReferenceAssignment)* '}')?
		public Group getGroup() { return cGroup; }
		
		//(OrderlessClass | HOClass | FOClass)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//OrderlessClass
		public RuleCall getOrderlessClassParserRuleCall_0_0() { return cOrderlessClassParserRuleCall_0_0; }
		
		//HOClass
		public RuleCall getHOClassParserRuleCall_0_1() { return cHOClassParserRuleCall_0_1; }
		
		//FOClass
		public RuleCall getFOClassParserRuleCall_0_2() { return cFOClassParserRuleCall_0_2; }
		
		//('{' (attributes+=Attribute | attAssignments+=AttributeAssignment | references+=Reference |
		//refAssignments+=ReferenceAssignment)* '}')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(attributes+=Attribute | attAssignments+=AttributeAssignment | references+=Reference |
		//refAssignments+=ReferenceAssignment)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_1_1_0() { return cAttributesAssignment_1_1_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_1_1_0_0() { return cAttributesAttributeParserRuleCall_1_1_0_0; }
		
		//attAssignments+=AttributeAssignment
		public Assignment getAttAssignmentsAssignment_1_1_1() { return cAttAssignmentsAssignment_1_1_1; }
		
		//AttributeAssignment
		public RuleCall getAttAssignmentsAttributeAssignmentParserRuleCall_1_1_1_0() { return cAttAssignmentsAttributeAssignmentParserRuleCall_1_1_1_0; }
		
		//references+=Reference
		public Assignment getReferencesAssignment_1_1_2() { return cReferencesAssignment_1_1_2; }
		
		//Reference
		public RuleCall getReferencesReferenceParserRuleCall_1_1_2_0() { return cReferencesReferenceParserRuleCall_1_1_2_0; }
		
		//refAssignments+=ReferenceAssignment
		public Assignment getRefAssignmentsAssignment_1_1_3() { return cRefAssignmentsAssignment_1_1_3; }
		
		//ReferenceAssignment
		public RuleCall getRefAssignmentsReferenceAssignmentParserRuleCall_1_1_3_0() { return cRefAssignmentsReferenceAssignmentParserRuleCall_1_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class OrderlessClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.OrderlessClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderlessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_3_1_0 = (CrossReference)cInstantiatedClassesAssignment_3_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_3_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSpecializesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_4_1_0 = (CrossReference)cSuperClassesAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_4_2_1_0 = (CrossReference)cSuperClassesAssignment_4_2_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubordinatedtoKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubordinatorsOntoLClassCrossReference_5_1_0 = (CrossReference)cSubordinatorsAssignment_5_1.eContents().get(0);
		private final RuleCall cSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubordinatorsOntoLClassCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubordinatorsOntoLClassCrossReference_5_2_1_0 = (CrossReference)cSubordinatorsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubordinatorsOntoLClassCrossReference_5_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cAlternatives_6.eContents().get(0);
		private final Assignment cCategorizationTypeAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final RuleCall cCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0 = (RuleCall)cCategorizationTypeAssignment_6_0_0.eContents().get(0);
		private final Assignment cBasetypeAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final CrossReference cBasetypeOntoLClassCrossReference_6_0_1_0 = (CrossReference)cBasetypeAssignment_6_0_1.eContents().get(0);
		private final RuleCall cBasetypeOntoLClassQualifiedNameParserRuleCall_6_0_1_0_1 = (RuleCall)cBasetypeOntoLClassCrossReference_6_0_1_0.eContents().get(1);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cIspowertypeofKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cPowertypeOfAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final CrossReference cPowertypeOfOntoLClassCrossReference_6_1_1_0 = (CrossReference)cPowertypeOfAssignment_6_1_1.eContents().get(0);
		private final RuleCall cPowertypeOfOntoLClassQualifiedNameParserRuleCall_6_1_1_0_1 = (RuleCall)cPowertypeOfOntoLClassCrossReference_6_1_1_0.eContents().get(1);
		
		//OrderlessClass:
		//	'orderless' 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//	superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
		//	subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
		//	basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'orderless' 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
		//subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
		//basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//'orderless'
		public Keyword getOrderlessKeyword_0() { return cOrderlessKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(':' instantiatedClasses+=[OntoLClass|QualifiedName] (',' instantiatedClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_3_1() { return cInstantiatedClassesAssignment_3_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_3_1_0() { return cInstantiatedClassesOntoLClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' instantiatedClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_3_2_1() { return cInstantiatedClassesAssignment_3_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_3_2_1_0() { return cInstantiatedClassesOntoLClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//('specializes' superClasses+=[OntoLClass|QualifiedName] (',' superClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_4_0() { return cSpecializesKeyword_4_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_4_1() { return cSuperClassesAssignment_4_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_4_1_0() { return cSuperClassesOntoLClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//(',' superClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_4_2_1() { return cSuperClassesAssignment_4_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_4_2_1_0() { return cSuperClassesOntoLClassCrossReference_4_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1; }
		
		//('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (',' subordinators+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subordinatedto'
		public Keyword getSubordinatedtoKeyword_5_0() { return cSubordinatedtoKeyword_5_0; }
		
		//subordinators+=[OntoLClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_5_1() { return cSubordinatorsAssignment_5_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSubordinatorsOntoLClassCrossReference_5_1_0() { return cSubordinatorsOntoLClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_1_0_1() { return cSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subordinators+=[OntoLClass|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subordinators+=[OntoLClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_5_2_1() { return cSubordinatorsAssignment_5_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSubordinatorsOntoLClassCrossReference_5_2_1_0() { return cSubordinatorsOntoLClassCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubordinatorsOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//(categorizationType=CategorizationType basetype=[OntoLClass|QualifiedName] | 'ispowertypeof'
		//powertypeOf=[OntoLClass|QualifiedName])?
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//categorizationType=CategorizationType basetype=[OntoLClass|QualifiedName]
		public Group getGroup_6_0() { return cGroup_6_0; }
		
		//categorizationType=CategorizationType
		public Assignment getCategorizationTypeAssignment_6_0_0() { return cCategorizationTypeAssignment_6_0_0; }
		
		//CategorizationType
		public RuleCall getCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0() { return cCategorizationTypeCategorizationTypeEnumRuleCall_6_0_0_0; }
		
		//basetype=[OntoLClass|QualifiedName]
		public Assignment getBasetypeAssignment_6_0_1() { return cBasetypeAssignment_6_0_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getBasetypeOntoLClassCrossReference_6_0_1_0() { return cBasetypeOntoLClassCrossReference_6_0_1_0; }
		
		//QualifiedName
		public RuleCall getBasetypeOntoLClassQualifiedNameParserRuleCall_6_0_1_0_1() { return cBasetypeOntoLClassQualifiedNameParserRuleCall_6_0_1_0_1; }
		
		//'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName]
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//'ispowertypeof'
		public Keyword getIspowertypeofKeyword_6_1_0() { return cIspowertypeofKeyword_6_1_0; }
		
		//powertypeOf=[OntoLClass|QualifiedName]
		public Assignment getPowertypeOfAssignment_6_1_1() { return cPowertypeOfAssignment_6_1_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getPowertypeOfOntoLClassCrossReference_6_1_1_0() { return cPowertypeOfOntoLClassCrossReference_6_1_1_0; }
		
		//QualifiedName
		public RuleCall getPowertypeOfOntoLClassQualifiedNameParserRuleCall_6_1_1_0_1() { return cPowertypeOfOntoLClassQualifiedNameParserRuleCall_6_1_1_0_1; }
	}
	public class FOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.FOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFirstOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_3_1_0 = (CrossReference)cInstantiatedClassesAssignment_3_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_3_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_3_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSpecializesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_4_1_0 = (CrossReference)cSuperClassesAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_4_2_1_0 = (CrossReference)cSuperClassesAssignment_4_2_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_4_2_1_0.eContents().get(1);
		
		//FOClass:
		//	'first-order'? 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//	superClasses+=[OntoLClass|QualifiedName])*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'first-order'? 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//superClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup() { return cGroup; }
		
		//'first-order'?
		public Keyword getFirstOrderKeyword_0() { return cFirstOrderKeyword_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(':' instantiatedClasses+=[OntoLClass|QualifiedName] (',' instantiatedClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_3_1() { return cInstantiatedClassesAssignment_3_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_3_1_0() { return cInstantiatedClassesOntoLClassCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_1_0_1; }
		
		//(',' instantiatedClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_3_2_1() { return cInstantiatedClassesAssignment_3_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_3_2_1_0() { return cInstantiatedClassesOntoLClassCrossReference_3_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_3_2_1_0_1; }
		
		//('specializes' superClasses+=[OntoLClass|QualifiedName] (',' superClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_4_0() { return cSpecializesKeyword_4_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_4_1() { return cSuperClassesAssignment_4_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_4_1_0() { return cSuperClassesOntoLClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//(',' superClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_4_2_1() { return cSuperClassesAssignment_4_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_4_2_1_0() { return cSuperClassesOntoLClassCrossReference_4_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1; }
	}
	public class HOClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.HOClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOrderAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOrderINTTerminalRuleCall_1_0 = (RuleCall)cOrderAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_4_1_0 = (CrossReference)cInstantiatedClassesAssignment_4_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cInstantiatedClassesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cInstantiatedClassesOntoLClassCrossReference_4_2_1_0 = (CrossReference)cInstantiatedClassesAssignment_4_2_1.eContents().get(0);
		private final RuleCall cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1 = (RuleCall)cInstantiatedClassesOntoLClassCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSpecializesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSuperClassesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_5_1_0 = (CrossReference)cSuperClassesAssignment_5_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSuperClassesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSuperClassesOntoLClassCrossReference_5_2_1_0 = (CrossReference)cSuperClassesAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSuperClassesOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSuperClassesOntoLClassCrossReference_5_2_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSubordinatedtoKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSubordinatorsOntoLClassCrossReference_6_1_0 = (CrossReference)cSubordinatorsAssignment_6_1.eContents().get(0);
		private final RuleCall cSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSubordinatorsOntoLClassCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cSubordinatorsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cSubordinatorsOntoLClassCrossReference_6_2_1_0 = (CrossReference)cSubordinatorsAssignment_6_2_1.eContents().get(0);
		private final RuleCall cSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_2_1_0_1 = (RuleCall)cSubordinatorsOntoLClassCrossReference_6_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Assignment cCategorizationTypeAssignment_7_0_0 = (Assignment)cGroup_7_0.eContents().get(0);
		private final RuleCall cCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0 = (RuleCall)cCategorizationTypeAssignment_7_0_0.eContents().get(0);
		private final Assignment cBasetypeAssignment_7_0_1 = (Assignment)cGroup_7_0.eContents().get(1);
		private final CrossReference cBasetypeOntoLClassCrossReference_7_0_1_0 = (CrossReference)cBasetypeAssignment_7_0_1.eContents().get(0);
		private final RuleCall cBasetypeOntoLClassQualifiedNameParserRuleCall_7_0_1_0_1 = (RuleCall)cBasetypeOntoLClassCrossReference_7_0_1_0.eContents().get(1);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final Keyword cIspowertypeofKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cPowertypeOfAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final CrossReference cPowertypeOfOntoLClassCrossReference_7_1_1_0 = (CrossReference)cPowertypeOfAssignment_7_1_1.eContents().get(0);
		private final RuleCall cPowertypeOfOntoLClassQualifiedNameParserRuleCall_7_1_1_0_1 = (RuleCall)cPowertypeOfOntoLClassCrossReference_7_1_1_0.eContents().get(1);
		
		//HOClass:
		//	'order' order=INT 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//	superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
		//	subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
		//	basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'order' order=INT 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
		//instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
		//superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
		//subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
		//basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//'order'
		public Keyword getOrderKeyword_0() { return cOrderKeyword_0; }
		
		//order=INT
		public Assignment getOrderAssignment_1() { return cOrderAssignment_1; }
		
		//INT
		public RuleCall getOrderINTTerminalRuleCall_1_0() { return cOrderINTTerminalRuleCall_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//(':' instantiatedClasses+=[OntoLClass|QualifiedName] (',' instantiatedClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//':'
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_4_1() { return cInstantiatedClassesAssignment_4_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_4_1_0() { return cInstantiatedClassesOntoLClassCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_1_0_1; }
		
		//(',' instantiatedClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//instantiatedClasses+=[OntoLClass|QualifiedName]
		public Assignment getInstantiatedClassesAssignment_4_2_1() { return cInstantiatedClassesAssignment_4_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getInstantiatedClassesOntoLClassCrossReference_4_2_1_0() { return cInstantiatedClassesOntoLClassCrossReference_4_2_1_0; }
		
		//QualifiedName
		public RuleCall getInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1() { return cInstantiatedClassesOntoLClassQualifiedNameParserRuleCall_4_2_1_0_1; }
		
		//('specializes' superClasses+=[OntoLClass|QualifiedName] (',' superClasses+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_5_0() { return cSpecializesKeyword_5_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_5_1() { return cSuperClassesAssignment_5_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_5_1_0() { return cSuperClassesOntoLClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_5_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' superClasses+=[OntoLClass|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//superClasses+=[OntoLClass|QualifiedName]
		public Assignment getSuperClassesAssignment_5_2_1() { return cSuperClassesAssignment_5_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSuperClassesOntoLClassCrossReference_5_2_1_0() { return cSuperClassesOntoLClassCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSuperClassesOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1() { return cSuperClassesOntoLClassQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (',' subordinators+=[OntoLClass|QualifiedName])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'subordinatedto'
		public Keyword getSubordinatedtoKeyword_6_0() { return cSubordinatedtoKeyword_6_0; }
		
		//subordinators+=[OntoLClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_6_1() { return cSubordinatorsAssignment_6_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSubordinatorsOntoLClassCrossReference_6_1_0() { return cSubordinatorsOntoLClassCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_1_0_1() { return cSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_1_0_1; }
		
		//(',' subordinators+=[OntoLClass|QualifiedName])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//','
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//subordinators+=[OntoLClass|QualifiedName]
		public Assignment getSubordinatorsAssignment_6_2_1() { return cSubordinatorsAssignment_6_2_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSubordinatorsOntoLClassCrossReference_6_2_1_0() { return cSubordinatorsOntoLClassCrossReference_6_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_2_1_0_1() { return cSubordinatorsOntoLClassQualifiedNameParserRuleCall_6_2_1_0_1; }
		
		//(categorizationType=CategorizationType basetype=[OntoLClass|QualifiedName] | 'ispowertypeof'
		//powertypeOf=[OntoLClass|QualifiedName])?
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//categorizationType=CategorizationType basetype=[OntoLClass|QualifiedName]
		public Group getGroup_7_0() { return cGroup_7_0; }
		
		//categorizationType=CategorizationType
		public Assignment getCategorizationTypeAssignment_7_0_0() { return cCategorizationTypeAssignment_7_0_0; }
		
		//CategorizationType
		public RuleCall getCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0() { return cCategorizationTypeCategorizationTypeEnumRuleCall_7_0_0_0; }
		
		//basetype=[OntoLClass|QualifiedName]
		public Assignment getBasetypeAssignment_7_0_1() { return cBasetypeAssignment_7_0_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getBasetypeOntoLClassCrossReference_7_0_1_0() { return cBasetypeOntoLClassCrossReference_7_0_1_0; }
		
		//QualifiedName
		public RuleCall getBasetypeOntoLClassQualifiedNameParserRuleCall_7_0_1_0_1() { return cBasetypeOntoLClassQualifiedNameParserRuleCall_7_0_1_0_1; }
		
		//'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName]
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//'ispowertypeof'
		public Keyword getIspowertypeofKeyword_7_1_0() { return cIspowertypeofKeyword_7_1_0; }
		
		//powertypeOf=[OntoLClass|QualifiedName]
		public Assignment getPowertypeOfAssignment_7_1_1() { return cPowertypeOfAssignment_7_1_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getPowertypeOfOntoLClassCrossReference_7_1_1_0() { return cPowertypeOfOntoLClassCrossReference_7_1_1_0; }
		
		//QualifiedName
		public RuleCall getPowertypeOfOntoLClassQualifiedNameParserRuleCall_7_1_1_0_1() { return cPowertypeOfOntoLClassQualifiedNameParserRuleCall_7_1_1_0_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0 = (RuleCall)cLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0 = (RuleCall)cUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cPropertyClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPropertyClassOntoLClassCrossReference_4_0 = (CrossReference)cPropertyClassAssignment_4.eContents().get(0);
		private final RuleCall cPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cPropertyClassOntoLClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubsetsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_5_1_0 = (CrossReference)cSubsetOfAssignment_5_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubsetOfAttributeCrossReference_5_2_1_0 = (CrossReference)cSubsetOfAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubsetOfAttributeCrossReference_5_2_1_0.eContents().get(1);
		
		//Attribute:
		//	'att' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//	propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//	subsetOf+=[Attribute|QualifiedName])*)?
		//	//	('isoppositeto' oppositeTo=[Attribute|QualifiedName])?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'att' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Attribute|QualifiedName] (','
		//subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup() { return cGroup; }
		
		//'att'
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_3_1() { return cLowerBoundAssignment_3_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_3_3() { return cUpperBoundAssignment_3_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//propertyClass=[OntoLClass|QualifiedName]
		public Assignment getPropertyClassAssignment_4() { return cPropertyClassAssignment_4; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getPropertyClassOntoLClassCrossReference_4_0() { return cPropertyClassOntoLClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1() { return cPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('subsets' subsetOf+=[Attribute|QualifiedName] (',' subsetOf+=[Attribute|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_5_0() { return cSubsetsKeyword_5_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_5_1() { return cSubsetOfAssignment_5_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_5_1_0() { return cSubsetOfAttributeCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subsetOf+=[Attribute|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subsetOf+=[Attribute|QualifiedName]
		public Assignment getSubsetOfAssignment_5_2_1() { return cSubsetOfAssignment_5_2_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getSubsetOfAttributeCrossReference_5_2_1_0() { return cSubsetOfAttributeCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubsetOfAttributeQualifiedNameParserRuleCall_5_2_1_0_1; }
	}
	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLowerBoundAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0 = (RuleCall)cLowerBoundAssignment_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cUpperBoundAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0 = (RuleCall)cUpperBoundAssignment_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cPropertyClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cPropertyClassOntoLClassCrossReference_4_0 = (CrossReference)cPropertyClassAssignment_4.eContents().get(0);
		private final RuleCall cPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cPropertyClassOntoLClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSubsetsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_5_1_0 = (CrossReference)cSubsetOfAssignment_5_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cSubsetOfAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cSubsetOfReferenceCrossReference_5_2_1_0 = (CrossReference)cSubsetOfAssignment_5_2_1.eContents().get(0);
		private final RuleCall cSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cSubsetOfReferenceCrossReference_5_2_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cIsoppositetoKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOppositeToAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cOppositeToReferenceCrossReference_6_1_0 = (CrossReference)cOppositeToAssignment_6_1.eContents().get(0);
		private final RuleCall cOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cOppositeToReferenceCrossReference_6_1_0.eContents().get(1);
		
		//Reference:
		//	'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//	propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//	subsetOf+=[Reference|QualifiedName])*)? ('isoppositeto' oppositeTo=[Reference|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		//propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
		//subsetOf+=[Reference|QualifiedName])*)? ('isoppositeto' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }
		
		//lowerBound=ELEMENTBOUND
		public Assignment getLowerBoundAssignment_3_1() { return cLowerBoundAssignment_3_1; }
		
		//ELEMENTBOUND
		public RuleCall getLowerBoundELEMENTBOUNDParserRuleCall_3_1_0() { return cLowerBoundELEMENTBOUNDParserRuleCall_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_2() { return cFullStopFullStopKeyword_3_2; }
		
		//upperBound=ELEMENTBOUND
		public Assignment getUpperBoundAssignment_3_3() { return cUpperBoundAssignment_3_3; }
		
		//ELEMENTBOUND
		public RuleCall getUpperBoundELEMENTBOUNDParserRuleCall_3_3_0() { return cUpperBoundELEMENTBOUNDParserRuleCall_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_4() { return cRightSquareBracketKeyword_3_4; }
		
		//propertyClass=[OntoLClass|QualifiedName]
		public Assignment getPropertyClassAssignment_4() { return cPropertyClassAssignment_4; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getPropertyClassOntoLClassCrossReference_4_0() { return cPropertyClassOntoLClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1() { return cPropertyClassOntoLClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('subsets' subsetOf+=[Reference|QualifiedName] (',' subsetOf+=[Reference|QualifiedName])*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_5_0() { return cSubsetsKeyword_5_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_5_1() { return cSubsetOfAssignment_5_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_5_1_0() { return cSubsetOfReferenceCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_5_1_0_1; }
		
		//(',' subsetOf+=[Reference|QualifiedName])*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//subsetOf+=[Reference|QualifiedName]
		public Assignment getSubsetOfAssignment_5_2_1() { return cSubsetOfAssignment_5_2_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getSubsetOfReferenceCrossReference_5_2_1_0() { return cSubsetOfReferenceCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1() { return cSubsetOfReferenceQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//('isoppositeto' oppositeTo=[Reference|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'isoppositeto'
		public Keyword getIsoppositetoKeyword_6_0() { return cIsoppositetoKeyword_6_0; }
		
		//oppositeTo=[Reference|QualifiedName]
		public Assignment getOppositeToAssignment_6_1() { return cOppositeToAssignment_6_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getOppositeToReferenceCrossReference_6_1_0() { return cOppositeToReferenceCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1() { return cOppositeToReferenceQualifiedNameParserRuleCall_6_1_0_1; }
	}
	public class ELEMENTBOUNDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.ELEMENTBOUND");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ELEMENTBOUND ecore::EIntegerObject:
		//	'*' | INT
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class AttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.AttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeAttributeCrossReference_1_0 = (CrossReference)cAttributeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cAttributeAttributeCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAssignmentsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cAssignmentsDataValueParserRuleCall_3_0_0 = (RuleCall)cAssignmentsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cAssignmentsDataValueParserRuleCall_3_1_1_0 = (RuleCall)cAssignmentsAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cAssignmentsDataValueParserRuleCall_3_1_2_1_0 = (RuleCall)cAssignmentsAssignment_3_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		
		//AttributeAssignment:
		//	'att' attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue
		//	| '{' assignments+=DataValue (',' assignments+=DataValue)* '}');
		@Override public ParserRule getRule() { return rule; }
		
		//'att' attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue | '{' assignments+=DataValue (','
		//assignments+=DataValue)* '}')
		public Group getGroup() { return cGroup; }
		
		//'att'
		public Keyword getAttKeyword_0() { return cAttKeyword_0; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_1() { return cAttributeAssignment_1; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_1_0() { return cAttributeAttributeCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_1_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//(assignments+=DataValue | '{' assignments+=DataValue (',' assignments+=DataValue)* '}')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_3_0() { return cAssignmentsAssignment_3_0; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_3_0_0() { return cAssignmentsDataValueParserRuleCall_3_0_0; }
		
		//'{' assignments+=DataValue (',' assignments+=DataValue)* '}'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_0() { return cLeftCurlyBracketKeyword_3_1_0; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_3_1_1() { return cAssignmentsAssignment_3_1_1; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_3_1_1_0() { return cAssignmentsDataValueParserRuleCall_3_1_1_0; }
		
		//(',' assignments+=DataValue)*
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//','
		public Keyword getCommaKeyword_3_1_2_0() { return cCommaKeyword_3_1_2_0; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_3_1_2_1() { return cAssignmentsAssignment_3_1_2_1; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_3_1_2_1_0() { return cAssignmentsDataValueParserRuleCall_3_1_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_3() { return cRightCurlyBracketKeyword_3_1_3; }
	}
	public class SimpleAttributeAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.SimpleAttributeAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAttributeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cAttributeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cAssignmentsAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cAssignmentsDataValueParserRuleCall_2_0_0 = (RuleCall)cAssignmentsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cAssignmentsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cAssignmentsDataValueParserRuleCall_2_1_1_0 = (RuleCall)cAssignmentsAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cAssignmentsAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cAssignmentsDataValueParserRuleCall_2_1_2_1_0 = (RuleCall)cAssignmentsAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1_3 = (Keyword)cGroup_2_1.eContents().get(3);
		
		//SimpleAttributeAssignment AttributeAssignment:
		//	attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue
		//	| '{' assignments+=DataValue (',' assignments+=DataValue)* '}')
		@Override public ParserRule getRule() { return rule; }
		
		//attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue | '{' assignments+=DataValue (','
		//assignments+=DataValue)* '}')
		public Group getGroup() { return cGroup; }
		
		//attribute=[Attribute|QualifiedName]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }
		
		//[Attribute|QualifiedName]
		public CrossReference getAttributeAttributeCrossReference_0_0() { return cAttributeAttributeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getAttributeAttributeQualifiedNameParserRuleCall_0_0_1() { return cAttributeAttributeQualifiedNameParserRuleCall_0_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//(assignments+=DataValue | '{' assignments+=DataValue (',' assignments+=DataValue)* '}')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_2_0() { return cAssignmentsAssignment_2_0; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_2_0_0() { return cAssignmentsDataValueParserRuleCall_2_0_0; }
		
		//'{' assignments+=DataValue (',' assignments+=DataValue)* '}'
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1_0() { return cLeftCurlyBracketKeyword_2_1_0; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_2_1_1() { return cAssignmentsAssignment_2_1_1; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_2_1_1_0() { return cAssignmentsDataValueParserRuleCall_2_1_1_0; }
		
		//(',' assignments+=DataValue)*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//','
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }
		
		//assignments+=DataValue
		public Assignment getAssignmentsAssignment_2_1_2_1() { return cAssignmentsAssignment_2_1_2_1; }
		
		//DataValue
		public RuleCall getAssignmentsDataValueParserRuleCall_2_1_2_1_0() { return cAssignmentsDataValueParserRuleCall_2_1_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_1_3() { return cRightCurlyBracketKeyword_2_1_3; }
	}
	public class ReferenceAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.ReferenceAssignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceReferenceCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceReferenceQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cReferenceReferenceCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cAssignmentsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cAssignmentsReferenceValueParserRuleCall_3_0_0 = (RuleCall)cAssignmentsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cAssignmentsReferenceValueParserRuleCall_3_1_1_0 = (RuleCall)cAssignmentsAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cAssignmentsAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cAssignmentsReferenceValueParserRuleCall_3_1_2_1_0 = (RuleCall)cAssignmentsAssignment_3_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1_3 = (Keyword)cGroup_3_1.eContents().get(3);
		
		//ReferenceAssignment:
		//	'ref' reference=[Reference|QualifiedName] '=' (assignments+=ReferenceValue
		//	| '{' assignments+=ReferenceValue (',' assignments+=ReferenceValue)* '}');
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' reference=[Reference|QualifiedName] '=' (assignments+=ReferenceValue | '{' assignments+=ReferenceValue (','
		//assignments+=ReferenceValue)* '}')
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//reference=[Reference|QualifiedName]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }
		
		//[Reference|QualifiedName]
		public CrossReference getReferenceReferenceCrossReference_1_0() { return cReferenceReferenceCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getReferenceReferenceQualifiedNameParserRuleCall_1_0_1() { return cReferenceReferenceQualifiedNameParserRuleCall_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//(assignments+=ReferenceValue | '{' assignments+=ReferenceValue (',' assignments+=ReferenceValue)* '}')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//assignments+=ReferenceValue
		public Assignment getAssignmentsAssignment_3_0() { return cAssignmentsAssignment_3_0; }
		
		//ReferenceValue
		public RuleCall getAssignmentsReferenceValueParserRuleCall_3_0_0() { return cAssignmentsReferenceValueParserRuleCall_3_0_0; }
		
		//'{' assignments+=ReferenceValue (',' assignments+=ReferenceValue)* '}'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_0() { return cLeftCurlyBracketKeyword_3_1_0; }
		
		//assignments+=ReferenceValue
		public Assignment getAssignmentsAssignment_3_1_1() { return cAssignmentsAssignment_3_1_1; }
		
		//ReferenceValue
		public RuleCall getAssignmentsReferenceValueParserRuleCall_3_1_1_0() { return cAssignmentsReferenceValueParserRuleCall_3_1_1_0; }
		
		//(',' assignments+=ReferenceValue)*
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }
		
		//','
		public Keyword getCommaKeyword_3_1_2_0() { return cCommaKeyword_3_1_2_0; }
		
		//assignments+=ReferenceValue
		public Assignment getAssignmentsAssignment_3_1_2_1() { return cAssignmentsAssignment_3_1_2_1; }
		
		//ReferenceValue
		public RuleCall getAssignmentsReferenceValueParserRuleCall_3_1_2_1_0() { return cAssignmentsReferenceValueParserRuleCall_3_1_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_3() { return cRightCurlyBracketKeyword_3_1_3; }
	}
	public class DataValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.DataValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNumberValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNoneValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cComplexDataValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//DataValue:
		//	StringValue | NumberValue | BooleanValue | NoneValue | ComplexDataValue;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue | NumberValue | BooleanValue | NoneValue | ComplexDataValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_1() { return cNumberValueParserRuleCall_1; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_2() { return cBooleanValueParserRuleCall_2; }
		
		//NoneValue
		public RuleCall getNoneValueParserRuleCall_3() { return cNoneValueParserRuleCall_3; }
		
		//ComplexDataValue
		public RuleCall getComplexDataValueParserRuleCall_4() { return cComplexDataValueParserRuleCall_4; }
	}
	public class ReferenceValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.ReferenceValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cValueEntityDeclarationCrossReference_0 = (CrossReference)cValueAssignment.eContents().get(0);
		private final RuleCall cValueEntityDeclarationQualifiedNameParserRuleCall_0_1 = (RuleCall)cValueEntityDeclarationCrossReference_0.eContents().get(1);
		
		//ReferenceValue:
		//	value=[EntityDeclaration|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//value=[EntityDeclaration|QualifiedName]
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//[EntityDeclaration|QualifiedName]
		public CrossReference getValueEntityDeclarationCrossReference_0() { return cValueEntityDeclarationCrossReference_0; }
		
		//QualifiedName
		public RuleCall getValueEntityDeclarationQualifiedNameParserRuleCall_0_1() { return cValueEntityDeclarationQualifiedNameParserRuleCall_0_1; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringValue:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNUMBERParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NumberValue:
		//	value=NUMBER;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NUMBER
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NUMBER
		public RuleCall getValueNUMBERParserRuleCall_0() { return cValueNUMBERParserRuleCall_0; }
	}
	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.NUMBER");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//NUMBER ecore::EDouble:
		//	'-'? INT ('.' INT)?
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT ('.' INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//('.' INT)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2_1() { return cINTTerminalRuleCall_2_1; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEANParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanValue:
		//	value=BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN
		public RuleCall getValueBOOLEANParserRuleCall_0() { return cValueBOOLEANParserRuleCall_0; }
	}
	public class BOOLEANElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.BOOLEAN");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BOOLEAN ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class NoneValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.NoneValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNoneValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNoneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NoneValue:
		//	{NoneValue} 'none';
		@Override public ParserRule getRule() { return rule; }
		
		//{NoneValue} 'none'
		public Group getGroup() { return cGroup; }
		
		//{NoneValue}
		public Action getNoneValueAction_0() { return cNoneValueAction_0; }
		
		//'none'
		public Keyword getNoneKeyword_1() { return cNoneKeyword_1; }
	}
	public class ComplexDataValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.ComplexDataValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cValueIndividualCrossReference_0_0 = (CrossReference)cValueAssignment_0.eContents().get(0);
		private final RuleCall cValueIndividualQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cValueIndividualCrossReference_0_0.eContents().get(1);
		private final Assignment cUnnamedValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cUnnamedValueUnamedIndividualParserRuleCall_1_0 = (RuleCall)cUnnamedValueAssignment_1.eContents().get(0);
		
		//ComplexDataValue:
		//	value=[Individual|QualifiedName] | unnamedValue=UnamedIndividual;
		@Override public ParserRule getRule() { return rule; }
		
		//value=[Individual|QualifiedName] | unnamedValue=UnamedIndividual
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//value=[Individual|QualifiedName]
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//[Individual|QualifiedName]
		public CrossReference getValueIndividualCrossReference_0_0() { return cValueIndividualCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getValueIndividualQualifiedNameParserRuleCall_0_0_1() { return cValueIndividualQualifiedNameParserRuleCall_0_0_1; }
		
		//unnamedValue=UnamedIndividual
		public Assignment getUnnamedValueAssignment_1() { return cUnnamedValueAssignment_1; }
		
		//UnamedIndividual
		public RuleCall getUnnamedValueUnamedIndividualParserRuleCall_1_0() { return cUnnamedValueUnamedIndividualParserRuleCall_1_0; }
	}
	public class UnamedIndividualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.UnamedIndividual");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttAssignmentsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAttAssignmentsSimpleAttributeAssignmentParserRuleCall_1_0 = (RuleCall)cAttAssignmentsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAttAssignmentsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAttAssignmentsSimpleAttributeAssignmentParserRuleCall_2_1_0 = (RuleCall)cAttAssignmentsAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//UnamedIndividual Individual:
		//	'['
		//	attAssignments+=SimpleAttributeAssignment (',' attAssignments+=SimpleAttributeAssignment)*
		//	']'
		@Override public ParserRule getRule() { return rule; }
		
		//'[' attAssignments+=SimpleAttributeAssignment (',' attAssignments+=SimpleAttributeAssignment)* ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//attAssignments+=SimpleAttributeAssignment
		public Assignment getAttAssignmentsAssignment_1() { return cAttAssignmentsAssignment_1; }
		
		//SimpleAttributeAssignment
		public RuleCall getAttAssignmentsSimpleAttributeAssignmentParserRuleCall_1_0() { return cAttAssignmentsSimpleAttributeAssignmentParserRuleCall_1_0; }
		
		//(',' attAssignments+=SimpleAttributeAssignment)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//attAssignments+=SimpleAttributeAssignment
		public Assignment getAttAssignmentsAssignment_2_1() { return cAttAssignmentsAssignment_2_1; }
		
		//SimpleAttributeAssignment
		public RuleCall getAttAssignmentsSimpleAttributeAssignmentParserRuleCall_2_1_0() { return cAttAssignmentsSimpleAttributeAssignmentParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class GeneralizationSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.GeneralizationSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cIsDisjointAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cIsDisjointDisjointKeyword_0_0_0 = (Keyword)cIsDisjointAssignment_0_0.eContents().get(0);
		private final Assignment cIsCompleteAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cIsCompleteCompleteKeyword_0_1_0 = (Keyword)cIsCompleteAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Assignment cIsDisjointAssignment_0_2_0 = (Assignment)cGroup_0_2.eContents().get(0);
		private final Keyword cIsDisjointDisjointKeyword_0_2_0_0 = (Keyword)cIsDisjointAssignment_0_2_0.eContents().get(0);
		private final Assignment cIsCompleteAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final Keyword cIsCompleteCompleteKeyword_0_2_1_0 = (Keyword)cIsCompleteAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Assignment cIsCompleteAssignment_0_3_0 = (Assignment)cGroup_0_3.eContents().get(0);
		private final Keyword cIsCompleteCompleteKeyword_0_3_0_0 = (Keyword)cIsCompleteAssignment_0_3_0.eContents().get(0);
		private final Assignment cIsDisjointAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final Keyword cIsDisjointDisjointKeyword_0_3_1_0 = (Keyword)cIsDisjointAssignment_0_3_1.eContents().get(0);
		private final Keyword cGensetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cGeneralKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGeneralAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cGeneralOntoLClassCrossReference_4_0 = (CrossReference)cGeneralAssignment_4.eContents().get(0);
		private final RuleCall cGeneralOntoLClassQualifiedNameParserRuleCall_4_0_1 = (RuleCall)cGeneralOntoLClassCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCategorizerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCategorizerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cCategorizerOntoLClassCrossReference_5_1_0 = (CrossReference)cCategorizerAssignment_5_1.eContents().get(0);
		private final RuleCall cCategorizerOntoLClassQualifiedNameParserRuleCall_5_1_0_1 = (RuleCall)cCategorizerOntoLClassCrossReference_5_1_0.eContents().get(1);
		private final Keyword cSpecificsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSpecificsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSpecificsOntoLClassCrossReference_7_0 = (CrossReference)cSpecificsAssignment_7.eContents().get(0);
		private final RuleCall cSpecificsOntoLClassQualifiedNameParserRuleCall_7_0_1 = (RuleCall)cSpecificsOntoLClassCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cSpecificsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cSpecificsOntoLClassCrossReference_8_1_0 = (CrossReference)cSpecificsAssignment_8_1.eContents().get(0);
		private final RuleCall cSpecificsOntoLClassQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cSpecificsOntoLClassCrossReference_8_1_0.eContents().get(1);
		
		//GeneralizationSet:
		//	(isDisjoint?='disjoint' | isComplete?='complete'
		//	| isDisjoint?='disjoint' isComplete?='complete'
		//	| isComplete?='complete' isDisjoint?='disjoint')?
		//	'genset' name=ID?
		//	'general' general=[OntoLClass|QualifiedName] ('categorizer' categorizer=[OntoLClass|QualifiedName])?
		//	'specifics' specifics+=[OntoLClass|QualifiedName] (',' specifics+=[OntoLClass|QualifiedName])+;
		@Override public ParserRule getRule() { return rule; }
		
		//(isDisjoint?='disjoint' | isComplete?='complete' | isDisjoint?='disjoint' isComplete?='complete' |
		//isComplete?='complete' isDisjoint?='disjoint')? 'genset' name=ID? 'general' general=[OntoLClass|QualifiedName]
		//('categorizer' categorizer=[OntoLClass|QualifiedName])? 'specifics' specifics+=[OntoLClass|QualifiedName] (','
		//specifics+=[OntoLClass|QualifiedName])+
		public Group getGroup() { return cGroup; }
		
		//(isDisjoint?='disjoint' | isComplete?='complete' | isDisjoint?='disjoint' isComplete?='complete' |
		//isComplete?='complete' isDisjoint?='disjoint')?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//isDisjoint?='disjoint'
		public Assignment getIsDisjointAssignment_0_0() { return cIsDisjointAssignment_0_0; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_0_0_0() { return cIsDisjointDisjointKeyword_0_0_0; }
		
		//isComplete?='complete'
		public Assignment getIsCompleteAssignment_0_1() { return cIsCompleteAssignment_0_1; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_0_1_0() { return cIsCompleteCompleteKeyword_0_1_0; }
		
		//isDisjoint?='disjoint' isComplete?='complete'
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//isDisjoint?='disjoint'
		public Assignment getIsDisjointAssignment_0_2_0() { return cIsDisjointAssignment_0_2_0; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_0_2_0_0() { return cIsDisjointDisjointKeyword_0_2_0_0; }
		
		//isComplete?='complete'
		public Assignment getIsCompleteAssignment_0_2_1() { return cIsCompleteAssignment_0_2_1; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_0_2_1_0() { return cIsCompleteCompleteKeyword_0_2_1_0; }
		
		//isComplete?='complete' isDisjoint?='disjoint'
		public Group getGroup_0_3() { return cGroup_0_3; }
		
		//isComplete?='complete'
		public Assignment getIsCompleteAssignment_0_3_0() { return cIsCompleteAssignment_0_3_0; }
		
		//'complete'
		public Keyword getIsCompleteCompleteKeyword_0_3_0_0() { return cIsCompleteCompleteKeyword_0_3_0_0; }
		
		//isDisjoint?='disjoint'
		public Assignment getIsDisjointAssignment_0_3_1() { return cIsDisjointAssignment_0_3_1; }
		
		//'disjoint'
		public Keyword getIsDisjointDisjointKeyword_0_3_1_0() { return cIsDisjointDisjointKeyword_0_3_1_0; }
		
		//'genset'
		public Keyword getGensetKeyword_1() { return cGensetKeyword_1; }
		
		//name=ID?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'general'
		public Keyword getGeneralKeyword_3() { return cGeneralKeyword_3; }
		
		//general=[OntoLClass|QualifiedName]
		public Assignment getGeneralAssignment_4() { return cGeneralAssignment_4; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getGeneralOntoLClassCrossReference_4_0() { return cGeneralOntoLClassCrossReference_4_0; }
		
		//QualifiedName
		public RuleCall getGeneralOntoLClassQualifiedNameParserRuleCall_4_0_1() { return cGeneralOntoLClassQualifiedNameParserRuleCall_4_0_1; }
		
		//('categorizer' categorizer=[OntoLClass|QualifiedName])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'categorizer'
		public Keyword getCategorizerKeyword_5_0() { return cCategorizerKeyword_5_0; }
		
		//categorizer=[OntoLClass|QualifiedName]
		public Assignment getCategorizerAssignment_5_1() { return cCategorizerAssignment_5_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getCategorizerOntoLClassCrossReference_5_1_0() { return cCategorizerOntoLClassCrossReference_5_1_0; }
		
		//QualifiedName
		public RuleCall getCategorizerOntoLClassQualifiedNameParserRuleCall_5_1_0_1() { return cCategorizerOntoLClassQualifiedNameParserRuleCall_5_1_0_1; }
		
		//'specifics'
		public Keyword getSpecificsKeyword_6() { return cSpecificsKeyword_6; }
		
		//specifics+=[OntoLClass|QualifiedName]
		public Assignment getSpecificsAssignment_7() { return cSpecificsAssignment_7; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSpecificsOntoLClassCrossReference_7_0() { return cSpecificsOntoLClassCrossReference_7_0; }
		
		//QualifiedName
		public RuleCall getSpecificsOntoLClassQualifiedNameParserRuleCall_7_0_1() { return cSpecificsOntoLClassQualifiedNameParserRuleCall_7_0_1; }
		
		//(',' specifics+=[OntoLClass|QualifiedName])+
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//specifics+=[OntoLClass|QualifiedName]
		public Assignment getSpecificsAssignment_8_1() { return cSpecificsAssignment_8_1; }
		
		//[OntoLClass|QualifiedName]
		public CrossReference getSpecificsOntoLClassCrossReference_8_1_0() { return cSpecificsOntoLClassCrossReference_8_1_0; }
		
		//QualifiedName
		public RuleCall getSpecificsOntoLClassQualifiedNameParserRuleCall_8_1_0_1() { return cSpecificsOntoLClassQualifiedNameParserRuleCall_8_1_0_1; }
	}
	
	public class CategorizationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.inf.nemo.ontol.OntoL.CategorizationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCATEGORIZEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCATEGORIZERCategorizesKeyword_0_0 = (Keyword)cCATEGORIZEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPLETE_CATEGORIZERCompletecategorizesKeyword_1_0 = (Keyword)cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDISJOINT_CATEGORIZERDisjointcategorizesKeyword_2_0 = (Keyword)cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPARTITIONEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPARTITIONERPartitionsKeyword_3_0 = (Keyword)cPARTITIONEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum CategorizationType:
		//	CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completecategorizes" | DISJOINT_CATEGORIZER="disjointcategorizes" |
		//	PARTITIONER="partitions";
		public EnumRule getRule() { return rule; }
		
		//CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completecategorizes" | DISJOINT_CATEGORIZER="disjointcategorizes" |
		//PARTITIONER="partitions"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CATEGORIZER="categorizes"
		public EnumLiteralDeclaration getCATEGORIZEREnumLiteralDeclaration_0() { return cCATEGORIZEREnumLiteralDeclaration_0; }
		
		//"categorizes"
		public Keyword getCATEGORIZERCategorizesKeyword_0_0() { return cCATEGORIZERCategorizesKeyword_0_0; }
		
		//COMPLETE_CATEGORIZER="completecategorizes"
		public EnumLiteralDeclaration getCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1() { return cCOMPLETE_CATEGORIZEREnumLiteralDeclaration_1; }
		
		//"completecategorizes"
		public Keyword getCOMPLETE_CATEGORIZERCompletecategorizesKeyword_1_0() { return cCOMPLETE_CATEGORIZERCompletecategorizesKeyword_1_0; }
		
		//DISJOINT_CATEGORIZER="disjointcategorizes"
		public EnumLiteralDeclaration getDISJOINT_CATEGORIZEREnumLiteralDeclaration_2() { return cDISJOINT_CATEGORIZEREnumLiteralDeclaration_2; }
		
		//"disjointcategorizes"
		public Keyword getDISJOINT_CATEGORIZERDisjointcategorizesKeyword_2_0() { return cDISJOINT_CATEGORIZERDisjointcategorizesKeyword_2_0; }
		
		//PARTITIONER="partitions"
		public EnumLiteralDeclaration getPARTITIONEREnumLiteralDeclaration_3() { return cPARTITIONEREnumLiteralDeclaration_3; }
		
		//"partitions"
		public Keyword getPARTITIONERPartitionsKeyword_3_0() { return cPARTITIONERPartitionsKeyword_3_0; }
	}
	
	private final ModelElements pModel;
	private final ModelElementElements pModelElement;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final ImportElements pImport;
	private final EntityDeclarationElements pEntityDeclaration;
	private final IndividualElements pIndividual;
	private final OntoLClassElements pOntoLClass;
	private final OrderlessClassElements pOrderlessClass;
	private final FOClassElements pFOClass;
	private final HOClassElements pHOClass;
	private final CategorizationTypeElements eCategorizationType;
	private final AttributeElements pAttribute;
	private final ReferenceElements pReference;
	private final ELEMENTBOUNDElements pELEMENTBOUND;
	private final AttributeAssignmentElements pAttributeAssignment;
	private final SimpleAttributeAssignmentElements pSimpleAttributeAssignment;
	private final ReferenceAssignmentElements pReferenceAssignment;
	private final DataValueElements pDataValue;
	private final ReferenceValueElements pReferenceValue;
	private final StringValueElements pStringValue;
	private final NumberValueElements pNumberValue;
	private final NUMBERElements pNUMBER;
	private final BooleanValueElements pBooleanValue;
	private final BOOLEANElements pBOOLEAN;
	private final NoneValueElements pNoneValue;
	private final ComplexDataValueElements pComplexDataValue;
	private final UnamedIndividualElements pUnamedIndividual;
	private final GeneralizationSetElements pGeneralizationSet;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public OntoLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pModelElement = new ModelElementElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pImport = new ImportElements();
		this.pEntityDeclaration = new EntityDeclarationElements();
		this.pIndividual = new IndividualElements();
		this.pOntoLClass = new OntoLClassElements();
		this.pOrderlessClass = new OrderlessClassElements();
		this.pFOClass = new FOClassElements();
		this.pHOClass = new HOClassElements();
		this.eCategorizationType = new CategorizationTypeElements();
		this.pAttribute = new AttributeElements();
		this.pReference = new ReferenceElements();
		this.pELEMENTBOUND = new ELEMENTBOUNDElements();
		this.pAttributeAssignment = new AttributeAssignmentElements();
		this.pSimpleAttributeAssignment = new SimpleAttributeAssignmentElements();
		this.pReferenceAssignment = new ReferenceAssignmentElements();
		this.pDataValue = new DataValueElements();
		this.pReferenceValue = new ReferenceValueElements();
		this.pStringValue = new StringValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pNUMBER = new NUMBERElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pBOOLEAN = new BOOLEANElements();
		this.pNoneValue = new NoneValueElements();
		this.pComplexDataValue = new ComplexDataValueElements();
		this.pUnamedIndividual = new UnamedIndividualElements();
		this.pGeneralizationSet = new GeneralizationSetElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufes.inf.nemo.ontol.OntoL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	'module' name=QualifiedName '{' ('include' includes+=[Model|QualifiedName] ';'
	//	| elements+=ModelElement)*
	//	'}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//ModelElement:
	//	(Import | EntityDeclaration | GeneralizationSet) ';';
	public ModelElementElements getModelElementAccess() {
		return pModelElement;
	}
	
	public ParserRule getModelElementRule() {
		return getModelElementAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//Import:
	//	'import' importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//EntityDeclaration:
	//	OntoLClass | Individual;
	public EntityDeclarationElements getEntityDeclarationAccess() {
		return pEntityDeclaration;
	}
	
	public ParserRule getEntityDeclarationRule() {
		return getEntityDeclarationAccess().getRule();
	}
	
	//Individual:
	//	'individual' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
	//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('{' (attAssignments+=AttributeAssignment
	//	| refAssignments+=ReferenceAssignment)* '}')?;
	public IndividualElements getIndividualAccess() {
		return pIndividual;
	}
	
	public ParserRule getIndividualRule() {
		return getIndividualAccess().getRule();
	}
	
	//OntoLClass:
	//	(OrderlessClass | HOClass | FOClass) ('{' (attributes+=Attribute
	//	| attAssignments+=AttributeAssignment
	//	| references+=Reference
	//	| refAssignments+=ReferenceAssignment)* '}')?;
	public OntoLClassElements getOntoLClassAccess() {
		return pOntoLClass;
	}
	
	public ParserRule getOntoLClassRule() {
		return getOntoLClassAccess().getRule();
	}
	
	//OrderlessClass:
	//	'orderless' 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
	//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
	//	superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
	//	subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
	//	basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?;
	public OrderlessClassElements getOrderlessClassAccess() {
		return pOrderlessClass;
	}
	
	public ParserRule getOrderlessClassRule() {
		return getOrderlessClassAccess().getRule();
	}
	
	//FOClass:
	//	'first-order'? 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
	//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
	//	superClasses+=[OntoLClass|QualifiedName])*)?;
	public FOClassElements getFOClassAccess() {
		return pFOClass;
	}
	
	public ParserRule getFOClassRule() {
		return getFOClassAccess().getRule();
	}
	
	//HOClass:
	//	'order' order=INT 'class' name=ID (':' instantiatedClasses+=[OntoLClass|QualifiedName] (','
	//	instantiatedClasses+=[OntoLClass|QualifiedName])*)? ('specializes' superClasses+=[OntoLClass|QualifiedName] (','
	//	superClasses+=[OntoLClass|QualifiedName])*)? ('subordinatedto' subordinators+=[OntoLClass|QualifiedName] (','
	//	subordinators+=[OntoLClass|QualifiedName])*)? (categorizationType=CategorizationType
	//	basetype=[OntoLClass|QualifiedName] | 'ispowertypeof' powertypeOf=[OntoLClass|QualifiedName])?;
	public HOClassElements getHOClassAccess() {
		return pHOClass;
	}
	
	public ParserRule getHOClassRule() {
		return getHOClassAccess().getRule();
	}
	
	//enum CategorizationType:
	//	CATEGORIZER="categorizes" | COMPLETE_CATEGORIZER="completecategorizes" | DISJOINT_CATEGORIZER="disjointcategorizes" |
	//	PARTITIONER="partitions";
	public CategorizationTypeElements getCategorizationTypeAccess() {
		return eCategorizationType;
	}
	
	public EnumRule getCategorizationTypeRule() {
		return getCategorizationTypeAccess().getRule();
	}
	
	//Attribute:
	//	'att' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
	//	propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Attribute|QualifiedName] (','
	//	subsetOf+=[Attribute|QualifiedName])*)?
	//	//	('isoppositeto' oppositeTo=[Attribute|QualifiedName])?
	//;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Reference:
	//	'ref' name=ID ':' ('[' lowerBound=ELEMENTBOUND '..' upperBound=ELEMENTBOUND ']')?
	//	propertyClass=[OntoLClass|QualifiedName] ('subsets' subsetOf+=[Reference|QualifiedName] (','
	//	subsetOf+=[Reference|QualifiedName])*)? ('isoppositeto' oppositeTo=[Reference|QualifiedName])?;
	public ReferenceElements getReferenceAccess() {
		return pReference;
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}
	
	//ELEMENTBOUND ecore::EIntegerObject:
	//	'*' | INT
	public ELEMENTBOUNDElements getELEMENTBOUNDAccess() {
		return pELEMENTBOUND;
	}
	
	public ParserRule getELEMENTBOUNDRule() {
		return getELEMENTBOUNDAccess().getRule();
	}
	
	//AttributeAssignment:
	//	'att' attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue
	//	| '{' assignments+=DataValue (',' assignments+=DataValue)* '}');
	public AttributeAssignmentElements getAttributeAssignmentAccess() {
		return pAttributeAssignment;
	}
	
	public ParserRule getAttributeAssignmentRule() {
		return getAttributeAssignmentAccess().getRule();
	}
	
	//SimpleAttributeAssignment AttributeAssignment:
	//	attribute=[Attribute|QualifiedName] '=' (assignments+=DataValue
	//	| '{' assignments+=DataValue (',' assignments+=DataValue)* '}')
	public SimpleAttributeAssignmentElements getSimpleAttributeAssignmentAccess() {
		return pSimpleAttributeAssignment;
	}
	
	public ParserRule getSimpleAttributeAssignmentRule() {
		return getSimpleAttributeAssignmentAccess().getRule();
	}
	
	//ReferenceAssignment:
	//	'ref' reference=[Reference|QualifiedName] '=' (assignments+=ReferenceValue
	//	| '{' assignments+=ReferenceValue (',' assignments+=ReferenceValue)* '}');
	public ReferenceAssignmentElements getReferenceAssignmentAccess() {
		return pReferenceAssignment;
	}
	
	public ParserRule getReferenceAssignmentRule() {
		return getReferenceAssignmentAccess().getRule();
	}
	
	//DataValue:
	//	StringValue | NumberValue | BooleanValue | NoneValue | ComplexDataValue;
	public DataValueElements getDataValueAccess() {
		return pDataValue;
	}
	
	public ParserRule getDataValueRule() {
		return getDataValueAccess().getRule();
	}
	
	//ReferenceValue:
	//	value=[EntityDeclaration|QualifiedName];
	public ReferenceValueElements getReferenceValueAccess() {
		return pReferenceValue;
	}
	
	public ParserRule getReferenceValueRule() {
		return getReferenceValueAccess().getRule();
	}
	
	//StringValue:
	//	value=STRING;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	//NumberValue:
	//	value=NUMBER;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	//NUMBER ecore::EDouble:
	//	'-'? INT ('.' INT)?
	public NUMBERElements getNUMBERAccess() {
		return pNUMBER;
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}
	
	//BooleanValue:
	//	value=BOOLEAN;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//BOOLEAN ecore::EBoolean:
	//	'true' | 'false'
	public BOOLEANElements getBOOLEANAccess() {
		return pBOOLEAN;
	}
	
	public ParserRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//NoneValue:
	//	{NoneValue} 'none';
	public NoneValueElements getNoneValueAccess() {
		return pNoneValue;
	}
	
	public ParserRule getNoneValueRule() {
		return getNoneValueAccess().getRule();
	}
	
	//ComplexDataValue:
	//	value=[Individual|QualifiedName] | unnamedValue=UnamedIndividual;
	public ComplexDataValueElements getComplexDataValueAccess() {
		return pComplexDataValue;
	}
	
	public ParserRule getComplexDataValueRule() {
		return getComplexDataValueAccess().getRule();
	}
	
	//UnamedIndividual Individual:
	//	'['
	//	attAssignments+=SimpleAttributeAssignment (',' attAssignments+=SimpleAttributeAssignment)*
	//	']'
	public UnamedIndividualElements getUnamedIndividualAccess() {
		return pUnamedIndividual;
	}
	
	public ParserRule getUnamedIndividualRule() {
		return getUnamedIndividualAccess().getRule();
	}
	
	//GeneralizationSet:
	//	(isDisjoint?='disjoint' | isComplete?='complete'
	//	| isDisjoint?='disjoint' isComplete?='complete'
	//	| isComplete?='complete' isDisjoint?='disjoint')?
	//	'genset' name=ID?
	//	'general' general=[OntoLClass|QualifiedName] ('categorizer' categorizer=[OntoLClass|QualifiedName])?
	//	'specifics' specifics+=[OntoLClass|QualifiedName] (',' specifics+=[OntoLClass|QualifiedName])+;
	public GeneralizationSetElements getGeneralizationSetAccess() {
		return pGeneralizationSet;
	}
	
	public ParserRule getGeneralizationSetRule() {
		return getGeneralizationSetAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
