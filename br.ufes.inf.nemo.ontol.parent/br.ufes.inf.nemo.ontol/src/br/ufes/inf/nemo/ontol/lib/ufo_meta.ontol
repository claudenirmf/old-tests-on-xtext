module ontol.core.meta
{
	
	import ontol.core.datatype.*;
	import ontol.core.base.*;
	import ontol.core.endurant.*;
	
	include ontol.core.datatype;
	include ontol.core.base;
	include ontol.core.endurant;
	
	/**		 					RIGIDITY		 					*/
	
	orderless class RigidClass : OrderlessClass, Category specializes Class;
	orderless class SemiRigidClass : OrderlessClass, Category specializes Class;
	orderless class AntiRigidClass : OrderlessClass, Category specializes Class;
	
	disjoint complete genset rigidity
		general Class
		specifics RigidClass, SemiRigidClass, AntiRigidClass;
	
	/**		 					SORTALITY		 					*/
	
	orderless class SortalClass : OrderlessClass, Category specializes Class;
	orderless class MixinClass : OrderlessClass, Category specializes Class;
	
	disjoint complete genset sortality
		general Class
		specifics SortalClass, MixinClass;
	
	/**		 					RIGID SORTALS		 					*/
	
	orderless class RigidSortalClass : OrderlessClass, Category
		specializes RigidClass, SortalClass;
	orderless class Kind : OrderlessClass, Category
		specializes RigidSortalClass partitions Endurant;
	orderless class Subkind : OrderlessClass, Category
		specializes RigidSortalClass subordinatedTo Kind;
	
	disjoint complete genset identity_principle_suply
		general RigidSortalClass
		specifics Kind, Subkind;
	
	orderless class Sortal : OrderlessClass, Category
		specializes SemiRigidClass, SortalClass subordinatedTo Kind;
	
	/**		 					ANTI-RIGID SORTALS		 					*/
	
	orderless class AntiRigidSortalClass : OrderlessClass, Category
		specializes AntiRigidClass, SortalClass;
	orderless class Role : OrderlessClass, Category
		specializes AntiRigidSortalClass subordinatedTo Kind
	{
		regularity ref isInvolvedIn : Relator
	};
	orderless class Phase : OrderlessClass, Category
		specializes AntiRigidSortalClass subordinatedTo Kind
	{
		regularity ref classifiedOver : [1..*] IntrinsicMoment
	};
	
	disjoint complete genset contingent_classification
		general AntiRigidSortalClass
		specifics Role, Phase;
	
	orderless class PhasePartition : OrderlessClass, Category specializes Phase;
	
	/**		 					RIGID MIXINS		 					*/
	
	orderless class Category : OrderlessClass, Category specializes RigidClass, MixinClass;
	
	orderless class Mixin : OrderlessClass, Category
		specializes SemiRigidClass, MixinClass subordinatedTo Category;
	
	/**		 					ANTI-RIGID MIXINS		 					*/
	
	orderless class AntiRigidMixinClass : OrderlessClass, Category
		specializes AntiRigidClass, MixinClass subordinatedTo Category;
	orderless class RoleMixin : OrderlessClass, Category
		specializes AntiRigidMixinClass subordinatedTo Category;
	orderless class PhaseMixin : OrderlessClass, Category
		specializes AntiRigidMixinClass;
	
	disjoint complete genset contingent_classification
		general AntiRigidMixinClass
		specifics RoleMixin, PhaseMixin;
	
	orderless class PhaseMixinPartition : OrderlessClass, Category
		specializes PhaseMixin;
	
}