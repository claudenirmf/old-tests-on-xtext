/*
 * generated by Xtext 2.10.0
 */
package br.ufes.inf.nemo.ontol.ide.contentassist.antlr;

import br.ufes.inf.nemo.ontol.ide.contentassist.antlr.internal.InternalOntoLParser;
import br.ufes.inf.nemo.ontol.services.OntoLGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class OntoLParser extends AbstractContentAssistParser {

	@Inject
	private OntoLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalOntoLParser createParser() {
		InternalOntoLParser result = new InternalOntoLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelElementAccess().getAlternatives_0(), "rule__ModelElement__Alternatives_0");
					put(grammarAccess.getEntityDeclarationAccess().getAlternatives(), "rule__EntityDeclaration__Alternatives");
					put(grammarAccess.getClassAccess().getAlternatives_0(), "rule__Class__Alternatives_0");
					put(grammarAccess.getClassAccess().getAlternatives_1_1(), "rule__Class__Alternatives_1_1");
					put(grammarAccess.getWClassAccess().getAlternatives_5(), "rule__WClass__Alternatives_5");
					put(grammarAccess.getHOClassAccess().getAlternatives_7(), "rule__HOClass__Alternatives_7");
					put(grammarAccess.getELEMENTBOUNDAccess().getAlternatives(), "rule__ELEMENTBOUND__Alternatives");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getBOOLEANAccess().getAlternatives(), "rule__BOOLEAN__Alternatives");
					put(grammarAccess.getGeneralizationSetAccess().getAlternatives_0(), "rule__GeneralizationSet__Alternatives_0");
					put(grammarAccess.getCategorizationTypeAccess().getAlternatives(), "rule__CategorizationType__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelElementAccess().getGroup(), "rule__ModelElement__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getIndividualAccess().getGroup(), "rule__Individual__Group__0");
					put(grammarAccess.getIndividualAccess().getGroup_2(), "rule__Individual__Group_2__0");
					put(grammarAccess.getIndividualAccess().getGroup_2_2(), "rule__Individual__Group_2_2__0");
					put(grammarAccess.getIndividualAccess().getGroup_3(), "rule__Individual__Group_3__0");
					put(grammarAccess.getSetAccess().getGroup(), "rule__Set__Group__0");
					put(grammarAccess.getSetAccess().getGroup_2(), "rule__Set__Group_2__0");
					put(grammarAccess.getSetAccess().getGroup_2_2(), "rule__Set__Group_2_2__0");
					put(grammarAccess.getSetAccess().getGroup_3(), "rule__Set__Group_3__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_1(), "rule__Class__Group_1__0");
					put(grammarAccess.getWClassAccess().getGroup(), "rule__WClass__Group__0");
					put(grammarAccess.getWClassAccess().getGroup_2(), "rule__WClass__Group_2__0");
					put(grammarAccess.getWClassAccess().getGroup_2_2(), "rule__WClass__Group_2_2__0");
					put(grammarAccess.getWClassAccess().getGroup_3(), "rule__WClass__Group_3__0");
					put(grammarAccess.getWClassAccess().getGroup_3_2(), "rule__WClass__Group_3_2__0");
					put(grammarAccess.getWClassAccess().getGroup_4(), "rule__WClass__Group_4__0");
					put(grammarAccess.getWClassAccess().getGroup_4_2(), "rule__WClass__Group_4_2__0");
					put(grammarAccess.getWClassAccess().getGroup_5_0(), "rule__WClass__Group_5_0__0");
					put(grammarAccess.getWClassAccess().getGroup_5_1(), "rule__WClass__Group_5_1__0");
					put(grammarAccess.getFOClassAccess().getGroup(), "rule__FOClass__Group__0");
					put(grammarAccess.getFOClassAccess().getGroup_2(), "rule__FOClass__Group_2__0");
					put(grammarAccess.getFOClassAccess().getGroup_2_2(), "rule__FOClass__Group_2_2__0");
					put(grammarAccess.getFOClassAccess().getGroup_3(), "rule__FOClass__Group_3__0");
					put(grammarAccess.getFOClassAccess().getGroup_3_2(), "rule__FOClass__Group_3_2__0");
					put(grammarAccess.getHOClassAccess().getGroup(), "rule__HOClass__Group__0");
					put(grammarAccess.getHOClassAccess().getGroup_4(), "rule__HOClass__Group_4__0");
					put(grammarAccess.getHOClassAccess().getGroup_4_2(), "rule__HOClass__Group_4_2__0");
					put(grammarAccess.getHOClassAccess().getGroup_5(), "rule__HOClass__Group_5__0");
					put(grammarAccess.getHOClassAccess().getGroup_5_2(), "rule__HOClass__Group_5_2__0");
					put(grammarAccess.getHOClassAccess().getGroup_6(), "rule__HOClass__Group_6__0");
					put(grammarAccess.getHOClassAccess().getGroup_6_2(), "rule__HOClass__Group_6_2__0");
					put(grammarAccess.getHOClassAccess().getGroup_7_0(), "rule__HOClass__Group_7_0__0");
					put(grammarAccess.getHOClassAccess().getGroup_7_1(), "rule__HOClass__Group_7_1__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup_2(), "rule__Property__Group_2__0");
					put(grammarAccess.getPropertyAccess().getGroup_4(), "rule__Property__Group_4__0");
					put(grammarAccess.getPropertyAccess().getGroup_4_2(), "rule__Property__Group_4_2__0");
					put(grammarAccess.getPropertyAccess().getGroup_5(), "rule__Property__Group_5__0");
					put(grammarAccess.getPropertyAssignmentAccess().getGroup(), "rule__PropertyAssignment__Group__0");
					put(grammarAccess.getListValueAccess().getGroup(), "rule__ListValue__Group__0");
					put(grammarAccess.getListValueAccess().getGroup_2(), "rule__ListValue__Group_2__0");
					put(grammarAccess.getNUMBERAccess().getGroup(), "rule__NUMBER__Group__0");
					put(grammarAccess.getNUMBERAccess().getGroup_2(), "rule__NUMBER__Group_2__0");
					put(grammarAccess.getNoneValueAccess().getGroup(), "rule__NoneValue__Group__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup(), "rule__GeneralizationSet__Group__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_0_0(), "rule__GeneralizationSet__Group_0_0__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_0_1(), "rule__GeneralizationSet__Group_0_1__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_0_2(), "rule__GeneralizationSet__Group_0_2__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_0_3(), "rule__GeneralizationSet__Group_0_3__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_5(), "rule__GeneralizationSet__Group_5__0");
					put(grammarAccess.getGeneralizationSetAccess().getGroup_8(), "rule__GeneralizationSet__Group_8__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getElementsAssignment_3(), "rule__Model__ElementsAssignment_3");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getIndividualAccess().getNameAssignment_1(), "rule__Individual__NameAssignment_1");
					put(grammarAccess.getIndividualAccess().getFixedTypesAssignment_2_1(), "rule__Individual__FixedTypesAssignment_2_1");
					put(grammarAccess.getIndividualAccess().getFixedTypesAssignment_2_2_1(), "rule__Individual__FixedTypesAssignment_2_2_1");
					put(grammarAccess.getIndividualAccess().getPropAssignsAssignment_3_1(), "rule__Individual__PropAssignsAssignment_3_1");
					put(grammarAccess.getSetAccess().getNameAssignment_1(), "rule__Set__NameAssignment_1");
					put(grammarAccess.getSetAccess().getFixedTypesAssignment_2_1(), "rule__Set__FixedTypesAssignment_2_1");
					put(grammarAccess.getSetAccess().getFixedTypesAssignment_2_2_1(), "rule__Set__FixedTypesAssignment_2_2_1");
					put(grammarAccess.getSetAccess().getPropAssignsAssignment_3_1(), "rule__Set__PropAssignsAssignment_3_1");
					put(grammarAccess.getClassAccess().getPropsAssignment_1_1_0(), "rule__Class__PropsAssignment_1_1_0");
					put(grammarAccess.getClassAccess().getPropAssignsAssignment_1_1_1(), "rule__Class__PropAssignsAssignment_1_1_1");
					put(grammarAccess.getWClassAccess().getNameAssignment_1(), "rule__WClass__NameAssignment_1");
					put(grammarAccess.getWClassAccess().getFixedTypesAssignment_2_1(), "rule__WClass__FixedTypesAssignment_2_1");
					put(grammarAccess.getWClassAccess().getFixedTypesAssignment_2_2_1(), "rule__WClass__FixedTypesAssignment_2_2_1");
					put(grammarAccess.getWClassAccess().getSuperClassesAssignment_3_1(), "rule__WClass__SuperClassesAssignment_3_1");
					put(grammarAccess.getWClassAccess().getSuperClassesAssignment_3_2_1(), "rule__WClass__SuperClassesAssignment_3_2_1");
					put(grammarAccess.getWClassAccess().getSubordinatorsAssignment_4_1(), "rule__WClass__SubordinatorsAssignment_4_1");
					put(grammarAccess.getWClassAccess().getSubordinatorsAssignment_4_2_1(), "rule__WClass__SubordinatorsAssignment_4_2_1");
					put(grammarAccess.getWClassAccess().getCatTypeAssignment_5_0_0(), "rule__WClass__CatTypeAssignment_5_0_0");
					put(grammarAccess.getWClassAccess().getBasetypeAssignment_5_0_1(), "rule__WClass__BasetypeAssignment_5_0_1");
					put(grammarAccess.getWClassAccess().getPowertypeOfAssignment_5_1_1(), "rule__WClass__PowertypeOfAssignment_5_1_1");
					put(grammarAccess.getFOClassAccess().getNameAssignment_1(), "rule__FOClass__NameAssignment_1");
					put(grammarAccess.getFOClassAccess().getFixedTypesAssignment_2_1(), "rule__FOClass__FixedTypesAssignment_2_1");
					put(grammarAccess.getFOClassAccess().getFixedTypesAssignment_2_2_1(), "rule__FOClass__FixedTypesAssignment_2_2_1");
					put(grammarAccess.getFOClassAccess().getSuperClassesAssignment_3_1(), "rule__FOClass__SuperClassesAssignment_3_1");
					put(grammarAccess.getFOClassAccess().getSuperClassesAssignment_3_2_1(), "rule__FOClass__SuperClassesAssignment_3_2_1");
					put(grammarAccess.getHOClassAccess().getNameAssignment_1(), "rule__HOClass__NameAssignment_1");
					put(grammarAccess.getHOClassAccess().getOrderAssignment_3(), "rule__HOClass__OrderAssignment_3");
					put(grammarAccess.getHOClassAccess().getFixedTypesAssignment_4_1(), "rule__HOClass__FixedTypesAssignment_4_1");
					put(grammarAccess.getHOClassAccess().getFixedTypesAssignment_4_2_1(), "rule__HOClass__FixedTypesAssignment_4_2_1");
					put(grammarAccess.getHOClassAccess().getSuperClassesAssignment_5_1(), "rule__HOClass__SuperClassesAssignment_5_1");
					put(grammarAccess.getHOClassAccess().getSuperClassesAssignment_5_2_1(), "rule__HOClass__SuperClassesAssignment_5_2_1");
					put(grammarAccess.getHOClassAccess().getSubordinatorsAssignment_6_1(), "rule__HOClass__SubordinatorsAssignment_6_1");
					put(grammarAccess.getHOClassAccess().getSubordinatorsAssignment_6_2_1(), "rule__HOClass__SubordinatorsAssignment_6_2_1");
					put(grammarAccess.getHOClassAccess().getCatTypeAssignment_7_0_0(), "rule__HOClass__CatTypeAssignment_7_0_0");
					put(grammarAccess.getHOClassAccess().getBasetypeAssignment_7_0_1(), "rule__HOClass__BasetypeAssignment_7_0_1");
					put(grammarAccess.getHOClassAccess().getPowertypeOfAssignment_7_1_1(), "rule__HOClass__PowertypeOfAssignment_7_1_1");
					put(grammarAccess.getPropertyAccess().getNameAssignment_0(), "rule__Property__NameAssignment_0");
					put(grammarAccess.getPropertyAccess().getLowerBoundAssignment_2_1(), "rule__Property__LowerBoundAssignment_2_1");
					put(grammarAccess.getPropertyAccess().getUpperBoundAssignment_2_3(), "rule__Property__UpperBoundAssignment_2_3");
					put(grammarAccess.getPropertyAccess().getPropertyTypeAssignment_3(), "rule__Property__PropertyTypeAssignment_3");
					put(grammarAccess.getPropertyAccess().getSubsetOfAssignment_4_1(), "rule__Property__SubsetOfAssignment_4_1");
					put(grammarAccess.getPropertyAccess().getSubsetOfAssignment_4_2_1(), "rule__Property__SubsetOfAssignment_4_2_1");
					put(grammarAccess.getPropertyAccess().getOppositeToAssignment_5_1(), "rule__Property__OppositeToAssignment_5_1");
					put(grammarAccess.getPropertyAssignmentAccess().getPropertyAssignment_0(), "rule__PropertyAssignment__PropertyAssignment_0");
					put(grammarAccess.getPropertyAssignmentAccess().getAssignmentAssignment_2(), "rule__PropertyAssignment__AssignmentAssignment_2");
					put(grammarAccess.getReferenceValueAccess().getValueAssignment(), "rule__ReferenceValue__ValueAssignment");
					put(grammarAccess.getListValueAccess().getValueAssignment_1(), "rule__ListValue__ValueAssignment_1");
					put(grammarAccess.getListValueAccess().getValueAssignment_2_1(), "rule__ListValue__ValueAssignment_2_1");
					put(grammarAccess.getStringValueAccess().getValueAssignment(), "rule__StringValue__ValueAssignment");
					put(grammarAccess.getNumberValueAccess().getValueAssignment(), "rule__NumberValue__ValueAssignment");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment(), "rule__BooleanValue__ValueAssignment");
					put(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_0_1(), "rule__GeneralizationSet__IsDisjointAssignment_0_0_1");
					put(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_1_1(), "rule__GeneralizationSet__IsCompleteAssignment_0_1_1");
					put(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_2_1(), "rule__GeneralizationSet__IsDisjointAssignment_0_2_1");
					put(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_2_3(), "rule__GeneralizationSet__IsCompleteAssignment_0_2_3");
					put(grammarAccess.getGeneralizationSetAccess().getIsCompleteAssignment_0_3_1(), "rule__GeneralizationSet__IsCompleteAssignment_0_3_1");
					put(grammarAccess.getGeneralizationSetAccess().getIsDisjointAssignment_0_3_3(), "rule__GeneralizationSet__IsDisjointAssignment_0_3_3");
					put(grammarAccess.getGeneralizationSetAccess().getNameAssignment_2(), "rule__GeneralizationSet__NameAssignment_2");
					put(grammarAccess.getGeneralizationSetAccess().getGeneralAssignment_4(), "rule__GeneralizationSet__GeneralAssignment_4");
					put(grammarAccess.getGeneralizationSetAccess().getCategorizerAssignment_5_1(), "rule__GeneralizationSet__CategorizerAssignment_5_1");
					put(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_7(), "rule__GeneralizationSet__SpecificsAssignment_7");
					put(grammarAccess.getGeneralizationSetAccess().getSpecificsAssignment_8_1(), "rule__GeneralizationSet__SpecificsAssignment_8_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalOntoLParser typedParser = (InternalOntoLParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OntoLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OntoLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
